<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Back.Content" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BackButtonInfoPage.Content" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Continue.Content" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="Help.Text" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HelpItem1Header.Text" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="HelpItem1Info.Text" xml:space="preserve">
    <value>This icon shows you your position.</value>
  </data>
  <data name="HelpItem2Header.Text" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="HelpItem2Info.Text" xml:space="preserve">
    <value>This is how the main app looks like. Left you can see the Menu open, you can open the menu by pushing on the 3 vertical stripes in the left upper corner. </value>
  </data>
  <data name="HelpItem3Header.Text" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="HelpItem3Info.Text" xml:space="preserve">
    <value>Here you can find the following: Help (where you are now), App Reset, and a function to get the way back to the VVV HQ.</value>
  </data>
  <data name="HelpItem4Header.Text" xml:space="preserve">
    <value>Clickable Points</value>
  </data>
  <data name="HelpItem4Info.Text" xml:space="preserve">
    <value>To get more information about certain points on the route, you can click to open a frame with more information about that point. These points are the black marks shown in the picture below.</value>
  </data>
  <data name="HelpItem5Header.Text" xml:space="preserve">
    <value>Follow-Toggle</value>
  </data>
  <data name="HelpItem5Info.Text" xml:space="preserve">
    <value>You can decide if you want the page centered on you. Do you want to take a look around the map? No problem! Just turn off the follow-switch on the top on the screen. Check the image below if you don't know what it looks like.</value>
  </data>
  <data name="HelpItem6Header.Text" xml:space="preserve">
    <value>Visited Points</value>
  </data>
  <data name="HelpItem6Info.Text" xml:space="preserve">
    <value>If you get near a monument, the application will notice it. You will be redirected to the information-page of this monument. Here you can read more information about it. If you return to the map by clicking "Back", you'll notice the point on the map turned green. This is to make clear you visited the point.</value>
  </data>
  <data name="HelpItem7Header.Text" xml:space="preserve">
    <value>Info about monuments</value>
  </data>
  <data name="HelpItem7Info.Text" xml:space="preserve">
    <value>This page contains information, images and options about a monument on the tour. On the picture below, you notice a magnifying-glass icon, which enlarges the text on the screen. Also you see a button with "Website/Video". This button redirects you to a website with more information or even a video about the monument.</value>
  </data>
  <data name="HelpItem8Header.Text" xml:space="preserve">
    <value>Zoom option</value>
  </data>
  <data name="HelpItem8Info.Text" xml:space="preserve">
    <value>You can zoom in on the map with the "+" icon and zoom out with the "-" icon. You can also zoom in and out with touch gestures.</value>
  </data>
  <data name="HelpItem9Header.Text" xml:space="preserve">
    <value>Walk Trace</value>
  </data>
  <data name="HelpItem9Info.Text" xml:space="preserve">
    <value>When you walk, you'll notice a red line on the map. This is a trace of the path you walked. This way you can show what detour(s) you took and if you missed a part of the tour.</value>
  </data>
  <data name="HelpPage.Text" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HelpTextPart1.Text" xml:space="preserve">
    <value />
  </data>
  <data name="InfoPage.Text" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="Language.Text" xml:space="preserve">
    <value>Select Language</value>
  </data>
  <data name="LanguagePage.Text" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="MapPageFollow.Text" xml:space="preserve">
    <value>Follow</value>
  </data>
  <data name="Reset.Text" xml:space="preserve">
    <value>Reset App</value>
  </data>
  <data name="RoutePage.Text" xml:space="preserve">
    <value>Select your route</value>
  </data>
  <data name="SwitchButton.OffContent" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="SwitchButton.OnContent" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="VVV.Text" xml:space="preserve">
    <value>Go back to the Tourist Office</value>
  </data>
</root>